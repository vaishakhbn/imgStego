package org.developerworks.workflow;
import java.security.SecureRandom;
import java.util.Random;
import java.util.Scanner;
import java.math.BigInteger;


public class DiffieHellman {
	public static void main(String[] args)
	{
		
		 Random prng = new SecureRandom();
		
		 BigInteger q=BigInteger.probablePrime(32,prng);
		 System.out.println(""+q);
		 BigInteger alpha;
		 primitiveRoot pr = new primitiveRoot();
		
		 for ( alpha = BigInteger.valueOf(2);
		            alpha.compareTo(q) > 0;
				 alpha = alpha.add(BigInteger.ONE)) {
		 if( pr.isPrimitive(q, alpha))
			 break;
		 }
		System.out.println(""+alpha);
		
		System.out.println("Dear Alice, please choose Xa such that it is less than q");
		Scanner s3 = new Scanner(System.in);
		BigInteger xa = s3.nextBigInteger();	
		BigInteger ya = alpha.modPow(xa, q);
		System.out.println("Dear Bob, please choose Xb such that it is less than q");
		Scanner s4 = new Scanner(System.in);
		BigInteger xb = s4.nextBigInteger();
		BigInteger yb = alpha.modPow(xb, q);
		BigInteger ka,kb;
		ka = yb.modPow(xa, q);
		kb = ya.modPow(xb, q);
		System.out.println("Key generated by alice is"+ka +" Key generated by Bob is "+kb);
	}
}
